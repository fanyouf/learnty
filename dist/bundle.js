(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GAME_STATUS;
(function (GAME_STATUS) {
    GAME_STATUS[GAME_STATUS["RUNNING"] = 0] = "RUNNING";
    GAME_STATUS[GAME_STATUS["PAUSE"] = 1] = "PAUSE";
    GAME_STATUS[GAME_STATUS["OVER"] = 2] = "OVER";
    GAME_STATUS[GAME_STATUS["RESTART"] = 3] = "RESTART";
})(GAME_STATUS || (GAME_STATUS = {}));
var Game = /** @class */ (function () {
    function Game(setting) {
        this.actors = [];
        this.plane = setting.plane;
        this.gameFrequency = setting.gameFrequency;
        this.gameArea = setting.gameArea;
        this.status = GAME_STATUS.RUNNING;
    }
    Game.prototype.pause = function () {
        if (this.status === GAME_STATUS.RUNNING) {
            if (this.timerId) {
                clearInterval(this.timerId);
                this.status = GAME_STATUS.PAUSE;
                this.timerId = null;
            }
        }
        else if (this.status === GAME_STATUS.PAUSE) {
            this.start();
            this.status = GAME_STATUS.RUNNING;
        }
    };
    Game.prototype.init = function (actors) {
        var that = this;
        this.actors = this.actors.concat(actors);
        var gameArea = document.getElementById("gameArea");
        this.actors.forEach(function (item) {
            gameArea.appendChild(item.obj);
        });
        document.body.addEventListener("keydown", function (e) {
            console.info(e.keyCode);
            e.stopPropagation();
            e.preventDefault();
            if (e.keyCode === 38) {
                that.up();
            }
            else if (e.keyCode === 39) {
                that.right();
            }
            else if (e.keyCode === 40) {
                that.down();
            }
            else if (e.keyCode === 37) {
                that.left();
            }
            else if (e.keyCode === 13) {
                that.pause();
            }
        });
    };
    Game.prototype.down = function () {
        this.plane.dy = 1;
    };
    Game.prototype.up = function () {
        this.plane.dy = -1;
    };
    Game.prototype.left = function () {
        this.plane.dx = -1;
    };
    Game.prototype.right = function () {
        this.plane.dx = 1;
    };
    Game.prototype.start = function () {
        var _this = this;
        if (this.timerId) {
            clearInterval(this.timerId);
        }
        this.timerId = setInterval(function () {
            _this.actors.forEach(function (item) {
                item.move();
            });
        }, this.gameFrequency);
    };
    return Game;
}());
exports.default = Game;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var plane_1 = require("./plane");
var game_1 = require("./game");
var plane = new plane_1.default();
var game = new game_1.default({ plane: plane, gameArea: document.getElementById("HTMLElement"), gameFrequency: 25 });
game.init([plane]);
game.start();
console.info(plane);
},{"./game":1,"./plane":3}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Plane = /** @class */ (function () {
    function Plane(x, y) {
        if (x === void 0) { x = 200; }
        if (y === void 0) { y = 200; }
        this.dx = -1;
        this.dy = -1;
        this.x = x;
        this.y = y;
        this.obj = document.createElement("div");
        this.obj.style.width = "30px";
        this.obj.style.height = "30px";
        this.obj.style.borderRadius = "15px";
        this.obj.className = "plane";
        this.move(x, y);
    }
    Plane.prototype.move = function (x, y) {
        if (x === void 0) { x = this.x; }
        if (y === void 0) { y = this.y; }
        this.x = x + this.dx;
        this.y = y + this.dy;
        this.obj.style.left = this.x + "px";
        this.obj.style.top = this.y + "px";
        // console.log(this.x)
    };
    return Plane;
}());
exports.default = Plane;
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
